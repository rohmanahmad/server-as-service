<daterange>
    <table class="table table-borderless">
        <tr>
            <td class="text-left" style="padding-top: 20px;">From Date</td>
            <td>
                <input type="text" name="a" value="{start}" id="dateStart" class="form-control form-control-sm"/>
            </td>
            <td class="text-right" style="padding-top: 20px;">To Date</td>
            <td>
                <input type="text" name="b" value="{end}" id="dateEnd" class="form-control form-control-sm"/>
            </td>
        </tr>
    </table>
    <script>
    import { debugLog } from 'helpers/utilities'
    export default {
        onMounted() {
            debugLog('date range picker')
            if(this.props.data == 'ch'){
                var start = localStorage.startDateCH ? localStorage.startDateCH : moment().subtract(1, 'month').format('YYYY-MM-DD')
                this.start =  start
                var end = localStorage.enddateCH ? localStorage.enddateCH : moment().format('YYYY-MM-DD')
                this.end = end
            } else if(this.props.data == 'buh'){
                var start = localStorage.startDateBUH ? localStorage.startDateBUH : moment().subtract(1, 'month').format('YYYY-MM-DD')
                this.start = start
                var end = localStorage.enddateBUH ? localStorage.enddateBUH : moment().format('YYYY-MM-DD')
                this.end = end
            } else {
                var start = localStorage.startDateBUH ? localStorage.startDateBUH : moment().subtract(1, 'month').format('YYYY-MM-DD')
                this.start = start
                var end = localStorage.enddateBUH ? localStorage.enddateBUH : moment().format('YYYY-MM-DD')
                this.end = end
            }
            this.update()
            this.renderDate()
        },
        renderDate(){
            $(document).ready(() => {
                $('#dateStart').daterangepicker({
                    locale: {
                        format: 'YYYY-MM-DD'
                    },
                    singleDatePicker: true,
                    showDropdowns: true,
                    minYear: moment().subtract(1, 'year').format('YYYY'),
                    maxYear: parseInt(moment().format('YYYY'),10)
                }, (start) => {
                    self.start = start.format('YYYY-MM-DD')
                    const e = this.end ? this.end : end.format('YYYY-MM-DD')
                    this.props.cb(this.start, e)
                })

                $('#dateEnd').daterangepicker({
                    locale: {
                        format: 'YYYY-MM-DD'
                    },
                    singleDatePicker: true,
                    showDropdowns: true,
                    minYear: moment().subtract(1, 'year').format('YYYY'),
                    maxYear: parseInt(moment().format('YYYY'),10)
                }, (end) => {
                    self.end = end.format('YYYY-MM-DD')
                    const s = self.start ? self.start : start.format('YYYY-MM-DD')
                    self.props.cb(s, self.end)
                })
            })
        }
    }
    </script>

</daterange>