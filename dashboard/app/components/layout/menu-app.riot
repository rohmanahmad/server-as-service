<menuapp>
    <div class="br-sideleft sideleft-scrollbar ps ps--active-y">
        <ul class="br-sideleft-menu mg-t-30">
            <li each="{o in this.items}" class="br-menu-item">
                <a if="{ !o.childs }" href="{setLink(o.link,{})}" class="br-menu-link { ActiveClass(props.active, o.name) } tx-11" id="{o.name}">
                    <i class="menu-item-icon icon {o.icon} tx-24"></i>
                    <span class="menu-item-label tx-10">{o.title}</span>
                    <my-pending-count if="{o.title == 'My Pending Tasks'}"></my-pending-count>
                </a>
                <a if="{ o.childs }" onclick="{() => toggleSettings(o)}" ref="{ o.name }" class="br-menu-link with-sub pointer { ActiveClass(props.active, o.name) } tx-11" >
                    <i class="menu-item-icon icon { o.icon } tx-20"></i>
                    <span class="menu-item-label tx-10">{ o.title }</span>
                </a>
                <ul if="{ o.childs }" id="{o.name}" class="br-menu-sub">
                    <li class="sub-item">
                        <a href="{setLink(val.link,{})}" class="sub-link" style="font-size: 9px !important;"  each="{val in o.childs}">
                            {val.title}
                        </a>
                    </li>
                </ul>
            </li>
        </ul>
    </div>
    <script>
        import { find } from 'lodash'
        import { getListMenu } from 'layoutModule/layout.sdk'
        import { getCookie, eraseCookie } from 'helpers/cookie'
        import { addClass, removeClass } from 'helpers/dom'
        import { getStorage, debugLog, showAlertError } from 'helpers/utilities'
        import { hasAccess } from 'helpers/permission'
        import myPendingCount from './@components/my-pending-count.riot'
    
        const component = [
            "customer.menu",
            "mypendingtask.menu",
        ]
        const subComponent = [
            "useraccess.menu",
        ]

        export default {
            components: {
                myPendingCount
            },
            state: {
                profileMenu: {
                    isActive: true
                },
                activeMenu: 'dashboard',
                isSettingMenu: false,
                isCommbankMenu: false
            },
            parentMenus: [
                'commbank-mobile',
                'ekyc-parameterization-menu',
                'ekyc-face_comparison-menu',
                'notification-menu',
                'settlement-tools',
                'settings',
                'report',
                'task-pendings'
            ],
            onMounted(){
                this.subActive = false;
                this.renderMenu()
                // if(window.location.hash != '#/login'){
                //     this.isHasAccess = hasAccess('mypendingtask.menu');
                //     if (isHasAccess) {
                //         this.SetInterval = setInterval(()=>{ 
                //             this.renderTotal()
                //         },10 * 1000)
                //     }
                // }
                this.update()
            },
            renderMenu(){
                getListMenu()
                    .then((response)=> {
                        let section = ['task-pendings']
                        this.items = response.data.filter(x => x.name !== 'settlement-tools')
                        // this.items = response.data // billpayment tolong aktifkan
                        let taskPendings = find(this.items, (val, o) => {
                            return section.indexOf(val.name) > -1
                        })
                        this.update()
                    })
                    .catch((err) => {
                        showAlertError(err)
                    })
            },
            ActiveClass(moduleActive, menuName){
                if (moduleActive === menuName) return 'active'
                const d = {
                    'customers-view': 'customers',
                    'parameterization-business-parameter': 'ekyc-parameterization-menu',
                    'face-comparison-inquiry': 'ekyc-face_comparison-menu',
                    'face-comparison-ad-hoc-checking': 'ekyc-face_comparison-menu',
                    'com-mob-on-boarding': 'commbank-mobile',
                    'com-mob-customers': 'commbank-mobile',
                    'com-mob-customer-view': 'commbank-mobile',
                    'user-create': 'settings',
                    'settlement-tools-inquiry': 'settlement-tools',
                    'settlement-tools-report-validation': 'settlement-tools',
                    'settlement-tools-masterdb': 'settlement-tools',
                    'settlement-tools-masterdb-history': 'settlement-tools',
                    'settlement-tools-status': 'settlement-tools',
                    'settlement-tools-user-download': 'settlement-tools',
                    'notification-my-list': 'notification-menu',
                    'notification-my-pending-approval': 'notification-menu',
                    'notification-details': 'notification-menu',
                    'notification-create': 'notification-menu',
                    'notification-edit': 'notification-menu',
                    'role-edit': 'settings',
                    'role-create': 'settings',
                    'user-access': 'settings',
                    'role-list': 'settings',
                    'task-pendings': 'task-pendings',
                    'customers': 'customers',
                    'report': 'report'
                }
                const name = d[moduleActive]
                if (this.parentMenus.indexOf(name) > -1) this.toggleSettings({ name })
                if (name === menuName) return 'active'
                else return ''
            },
            EventSub(){
                this.subActive = !this.subActive;
                this.update()
            },
            onUnmounted(){
                // clearInterval(this.SetInterval)
            },
            toggleSettings({ name }) {
                const collapsedParents = this.parentMenus.filter(x => x !== name)
                console.log({collapsedParents})
                for (const p of collapsedParents) {
                    removeClass(document.getElementById(p), 'd-block')
                }
                if (['report', 'task-pendings'].indexOf(name) === -1) {
                    const elem = document.getElementById(name)
                    addClass(elem, 'd-block')
                }
            }
        }
    </script>
</menuapp>