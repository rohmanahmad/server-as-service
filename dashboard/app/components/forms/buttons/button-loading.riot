<!-- 
    props:
     - elClass
     - elIsloading
     - elIconLeft
     - elIsDisabled
     - elTitle
     - elOnloadingTitle
     - elIconRight
     - callback
 -->

<button-loading>
    <button class="{ props.elClass || 'btn' }" disabled="{ props.elIsloading || props.elIsDisabled }" onclick="{ sendEvent }" id="{buttonId}">
        <i if="{ props.elIconLeft }" class="icon { props.elIconLeft }"></i>
        <span if="{ !props.elIsloading && props.elTitle }">{ props.elTitle }</span>
        <span if="{ props.elIsloading && props.elOnloadingTitle }" class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
        <span if="{ props.elIsloading && props.elOnloadingTitle }">{ props.elOnloadingTitle }</span>
        <i if="{ props.elIconRight }" class="icon { props.elIconRight }"></i>
    </button>
    <script>
        import { showAlertError, randomString, debugLog } from 'helpers/utilities'
        export default {
            onBeforeMount() {
                this.buttonId = randomString(10, {onlyChars: true})
            },
            onUpdated(props) {},
            onMounted(props) {
                debugLog(`[${this.name}] [MOUNTED]`)
                if (typeof props.callback !== 'function') {
                    showAlertError(new Error('[Form Button Loading] Callback Should Be a Function'))
                }
                this.callback = props.callback
            },
            sendEvent() {
                this.callback({ clicked: true, name: this.props.elName })
            },
        }
    </script>
</button-loading>