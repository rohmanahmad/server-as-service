<!-- 
    props:
     - elClass
     - elPopoverTitle
     - sortKey
     - sortValue
     - title
     - callback
 -->

<form-button-sort>
    <div class="w-100 pointer" sort-key="{ props.sortKey }" onclick="{ changeSortValue }" data-toggle="popover" id="{ elId }" title="Sort { callbackData.sortKey }">
        <div if="{ ['asc', 'desc'].indexOf(callbackData.sortValue) === -1 }" class="wrapper">
            <i class="float-left fa fa-long-arrow-down"></i>
            <i class="float-left fa fa-long-arrow-up"></i>
        </div>
        <i class="text-warning fa fa-sort-alpha-{callbackData.sortValue}"></i>
    </div>
    <style>
        .wrapper {
            width: 100%;
        }
    </style>
    <script>
        import { randomString, showAlertError, debugLog } from 'helpers/utilities'
        export default {
            elId: randomString(10, {onlyChars: true}),
            callbackData: {},
            onBeforeMount(props) {
                this.callbackData.buttonId = this.buttonId
                this.callbackData.sortKey = props.sortKey
                this.callbackData.sortValue = props.sortValue
                if (typeof props.callback !== 'function') {
                    showAlertError(new Error('[Form Button Sort] Callback Should Be a Function'))
                }
            },
            onMounted(props) {
                debugLog(`[${this.name}] [MOUNTED]`)
                const selector = $('[data-toggle="popover"]')
                $(document).ready(function () {
                    selector.popover({trigger: 'hover', customClass: 'tx-10'})
                })
            },
            changeSortValue() {
                if (this.callbackData.sortValue === 'asc') this.callbackData.sortValue = 'desc'
                else this.callbackData.sortValue = 'asc'
                this.callback()
            },
            callback() {
                this.props.callback(this.callbackData)
            }
        }
    </script>
</form-button-sort>