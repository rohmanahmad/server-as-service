<search-by-field>
    <div class="form-inline">
        <select class="form-control {customClass}" id="{ randomID0 }" onchange="{ updateData }">
            <option each="{val in fields}" value="{val}">{val}</option>
        </select>
        <input type="text" class="form-control {customClass}" id="{ randomID1 }" onchange="{ updateData }">
    </div>
    <style>

    </style>
    <script>
        import { randomString, showAlertError, debugLog } from 'helpers/utilities'

        export default {
            fields: [],
            result: {field: null, value: null},
            onBeforeMount(props) {
                if (props.customClass) this.customClass = props.customClass
                if (typeof props.callback !== 'function') showAlertError(new Error('Callback Required'))
                this.randomID0 = randomString(10, {onlyChars: true})
                this.randomID1 = randomString(10, {onlyChars: true})
            },
            onMounted() {
                debugLog(`[${this.name}] [MOUNTED]`)
            },
            onUpdated(props) {
                if (props.values) {
                    this.values = props.values
                }
            },
            updateData() {
                this.result.field = this.$('#' + this.randomID0).value
                this.result.value = this.$('#' + this.randomID1).value
                if (typeof this.props.callback === 'function') this.props.callback(this.result)
            }
        }
    </script>
</search-by-field>