<!-- 
    props:
    - name [String] default NULL
    - value [String] default NULL
    - data-class [String] default NULL
    - elChecked [String] default NULL
    - callback [Function] default NULL
    - el-items [Array{name, title}] default []
 -->

<form-checkbox-group>
    <div class="input-group pd-t-5">
        <div each="{ item in items }" class="pd-x-5">
            <input type="checkbox" value="{ item.name }" class="{ props.elClass } mg-r-2" onclick="{ callback }" id="{ item.id }" checked="{ item.checked }">
            { item.title }
        </div>
    </div>
    <style></style>
    <script>
        import { randomString, showAlertError, debugLog } from 'helpers/utilities'
        import { isArray } from 'lodash'
        export default {
            onBeforeMount(props) {
                this.items = (props.elItems || []).map(x => {
                    x.id = randomString(10, {onlyChars: true})
                    x.checked = (props.elChecked || []).indexOf(x.name) > -1
                    return x
                })
            },
            onMounted(props) {
                debugLog(`[${this.name}] [MOUNTED]`)
                if (typeof props.callback !== 'function') return showAlertError(new Error('[Form Checkbox Group] Callback Should Be a Function'))
                if (!isArray(props.elItems)) return showAlertError(new Error('[Form Checkbox Group] el-items is Required'))
            },
            callback() {
                let xSelected = []
                for (const x of this.items) {
                    const isChecked = $('#' + x.id).is(':checked')
                    if (isChecked) {
                        const valueOfInput = this.$('#' + x.id).value
                        xSelected.push(valueOfInput)
                    }
                }
                this.props.callback(xSelected)
            }
        }
    </script>
</form-checkbox-group>