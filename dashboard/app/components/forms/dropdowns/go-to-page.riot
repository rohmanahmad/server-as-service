<go-to-page>
    <select class="form-control {customClass}" id="{ randomID }" onchange="{ updateData }">
        <option each="{val in values}" value="{val}" selected="{val === props.selectedValue}">{val}</option>
    </select>
    <script>
        import { randomString, showAlertError, debugLog } from 'helpers/utilities'

        export default {
            values: [ 1 ],
            customClass: '',
            // randomID: '',
            onBeforeMount(props) {
                if (props.customClass) this.customClass = props.customClass
                if (props.totalPages) this.totalPages = parseInt(props.totalPages)
                if (typeof props.callback !== 'function') showAlertError(new Error('Callback Required'))
                this.randomID = randomString(10, {onlyChars: true})
            },
            onMounted(props) {
                debugLog(`[${this.name}] [MOUNTED]`)
            },
            onBeforeUpdate(props) {
                if (props.customClass) this.customClass = props.customClass
                if (props.totalPages) {
                    this.totalPages = props.totalPages
                }
                this.updateValues(this.totalPages)
            },
            updateValues(totalPages=1) {
                this.values = []
                for (let i = 1; i <= totalPages; i++) {
                    this.values.push(i)
                }
            },
            updateData() {
                const current = this.$('#' + this.randomID).value || 1
                if (typeof this.props.callback === 'function') this.props.callback(parseInt(current))
            }
        }
    </script>
</go-to-page>