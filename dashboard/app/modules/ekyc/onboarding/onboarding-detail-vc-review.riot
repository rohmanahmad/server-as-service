<onboarding-detail-vc-review>
    <div class="br-mainpanel">
        <div class="br-pageheader">
            <nav class="breadcrumb pd-0 mg-0 tx-12">
                <span class="breadcrumb-item">Customers</span>
                <span class="breadcrumb-item">Onboarding</span>
                <span class="breadcrumb-item active">Detail(VC Review)</span>
            </nav>
        </div>
        <div class="br-pagebody pd-r-5 pd-l-5 mg-t-10">
            <div class="br-section-wrapper pd-x-20 pd-t-10">
                <div class="row">
                    <div class="col-12">
                        <a href="{setLink('com_mob/on-boarding')}" class="btn btn-primary">
                            Back
                        </a>
                    </div>
                </div>
                <div class="row pd-t-20 pd-b-40">
                    <div class="col-sm-3 bd-r bd-t">
                        <form id="form-review-submit">
                            <table class="table table-borderless">
                                <tr>
                                    <td class="tx-12">
                                        <label>Video Call - Review Status</label> <br>
                                        <select id="status" class="form-control" onchange="{eventChangedReviewStatus}">
                                            <option value="{frs[0]}" each="{frs in Object.entries(formComponents.ReviewStatus)}">{ frs[1] }</option>
                                        </select>
                                    </td>
                                </tr>
                                <tr if="{showComponents.escalationReason}">
                                    <td class="tx-12">
                                        <label>Video Call - Escalation Reason</label> <br>
                                        <select id="reason" class="form-control">
                                            <option value="{fer[0]}" each="{fer in Object.entries(formComponents.EscalationReasons)}">{ fer[1] }</option>
                                        </select>
                                    </td>
                                </tr>
                                <tr if="{showComponents.escalationTo}">
                                    <td class="tx-12">
                                        <label>Video Call - Escalation To  </label> <br>
                                        <div class="form-group form-check mg-b-0 pd-l-10" each="{fet in Object.entries(formComponents.EscalationTo)}">
                                            <input type="checkbox" class="mg-t-2" id="{fet[0]}" value="{fet[0]}"> 
                                            <label class="mg-l-5 " for="exampleCheck1"> { fet[1] } </label>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="tx-12">
                                        <label>Video Call - Review Note</label> <br>
                                        <textarea class="form-control" id="note" rows="3"></textarea>
                                    </td>
                                </tr>
                                <tr>
                                    <td style="border-top: 1px solid #C0C0C0">
                                        <button disabled="{submitButton.isLoading ? 'true' : ''}" class="btn btn-primary float-right tx-11" onclick="{submitForm}">
                                            <span if="{!submitButton.isLoading}">Submit</span>
                                            <span if="{submitButton.isLoading}" class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                            <span if="{submitButton.isLoading}">Loading...</span>
                                        </button>
                                    </td>
                                </tr>
                            </table>
                        </form>
                    </div>
                    <div class="col-sm-9 bd-l bd-t">
                        <onboarding-detail reviewtype="{dataType}" sessionid="{sessionId}" needRefreshHistory="{isNeedRefreshHistory}"></onboarding-detail>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <style>
        tr th, tr td {
            letter-spacing: 0px;
            font-size: 12px;
            padding: 8px;
        }
        .wrapper:hover, .wrapper-filter-and-search:hover {
            color: #C0C0C0;
        }
        .wrapper{
            width: 840px;
        }
        .alert-download {
            position: absolute;
            bottom: 0px;
            right: 5px;
            z-index: 9999;
            margin-bottom: 5px;
        }
    </style>
    
    <script>
        import {
            cancelAllRequest,

        } from 'services/SDK/main'
        import {
            ComMoOnBoardingSubmitReviewVc,
        } from 'appModule/ekyc/ekyc.sdk'
        import { createAgentActivity } from 'appModule/agents/agent-activity.sdk'
        import { getStorage } from 'helpers/storage'
        import { result } from 'lodash'
        import { showAlertError, showAlertSuccess } from 'helpers/utilities'
        import { goTo } from 'helpers/ma'
        const defaultValues = {
            ReviewStatus: {
                '-': '-',
                'UNDER_REVIEW': 'Under Review',
                'PENDING_REVIEW': 'Pending Review',
                'VALID': 'Valid',
                'NOT_VALID': 'Not Valid'
            },
            EscalationReasons: {
                '-': '-',
                'VIDEO_CALL_RECORDING_BLURRY': 'Video Call Recording Blurry',
                'VIDEO_CALL_RECORDING_NOT_TRANSCODE': 'Video Call Recording Not Transcode',
                'FACE_DIFFERENT_WITH_EKTP': 'Face Different With eKTP',
                'PHYSICAL_EKTP_DATA_NOT_MATCHED': 'Physical eKTP Data Not Matched',
                'PHYSICAL_EKTP_BLURRY': 'Physical eKTP Blurry',
                'PHYSICAL_EKTP_MISSING_PARTIAL_DATA': 'Physical eKTP Missing Partial Data',
                'PHYSICAL_EKTP_IN_DOUBT': 'Physical eKTP In Doubt',
                'CUSTOMER_IN_DOUBT': 'Customer In Doubt',
                'OTHER_TECHNICAL': 'Other Technical',
                'OTHER_NON_TECHNICAL': 'Other Non Technical',
            },
            EscalationTo: {
                // '-': '-',
                'FRAUD_TEAM': 'Fraud Team',
                'DIGITAL_CASA': 'Digital Casa',
                'IT_DIGITAL': 'IT Digital',
                'OTHER': 'Other'
            }
        }
        export default {
            dataType: 'vc-review',
            reviewType: 'VIDEO_CALL',
            sessionId: '',
            submitButton: {},
            isNeedRefreshHistory: false,
            formComponents: {
                ...defaultValues
            },
            showComponents: {},
            onBeforeMount() {
                this.showComponents = {
                    escalationReason: true,
                    escalationTo: true
                }
                this.submitButton = { isLoading: false, title: 'Submit' }
            },
            onBeforeUnmount() {
                cancelAllRequest()
            },
            onMounted() {
                console.log('[detail] onboarding')
                this.sessionId = getStorage('SESSION_ID', 'ON-BOARDING')
                this.changeFormComponents(0)
                this.logAgentActivity('Open Detail VC Review', 'onBoarding_Session_Id='+ this.sessionId)
            },
            logAgentActivity(action, detail) {
                createAgentActivity({
                    module: 'CommBank Mobile - OnBoarding',
                    action,
                    detail
                })
            },
            eventChangedReviewStatus(e){
                this.changeFormComponents(e.target.selectedIndex)
            },
            changeFormComponents (selectedIndex) {
                if (selectedIndex === 3) {
                    this.showComponents = {
                        escalationTo: false,
                        escalationReason: false
                    }
                } else {
                    this.showComponents = {
                        escalationTo: true,
                        escalationReason: true
                    }
                }
                this.update()
            },
            async submitForm(e) {
                try {
                    e.preventDefault()
                    this.submitButton.isLoading = true
                    this.update()
                    const status = this.$('#status').value
                    const reason = this.$('#reason')
                    const escalateTo = Object.keys(defaultValues.EscalationTo)
                        .map(x => {
                            const isCheck = $(`#${x}`).is(":checked")
                            if (isCheck) return x
                            return false
                        })
                        .filter(x => x)
                        .join(',')
                    const notes = this.$('#note').value
                    const payload = {
                        review_type: this.reviewType,
                        review_status: status,
                        session_id: this.sessionId,
                        escalation_reason: result(reason, 'value', '-'),
                        escalation_to: escalateTo || '-',
                        notes: notes
                    }
                    if (status !== 'VALID') {
                        payload['escalation_reason'] = result(reason, 'value', '')
                        payload['escalation_to'] = escalateTo
                        for (const p in payload) {
                            const v = payload[p]
                            if (!v || (v && v.length === 0) || v === '-') throw new Error(`${p} is Required`)
                        }
                    // } else {
                    //     if (notes.length === 0 || notes === '-') throw new Error('Note is Required')
                    }
                    if (!payload.session_id) throw new Error('Invalid Session ID')
                    await ComMoOnBoardingSubmitReviewVc(payload)
                    showAlertSuccess()
                    this.$('#form-review-submit').reset()
                    this.isNeedRefreshHistory = true
                    this.submitButton.isLoading = false
                    this.update()
                    let detail = []
                    detail.push('onBoarding_Session_Id= '+ this.sessionId)
                    detail.push('Review Status= '+ status)
                    this.logAgentActivity('Submit VC Review', detail.join(', '))
                } catch (err) {
                    showAlertError(err)
                }
                this.submitButton.isLoading = false
                this.update()
            }
        }
    </script>
</onboarding-detail-vc-review>