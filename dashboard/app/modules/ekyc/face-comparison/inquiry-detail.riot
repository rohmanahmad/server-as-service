<face-comparison-inquiry-detail>
    <div class="br-mainpanel">
        <div class="br-pageheader">
            <nav class="breadcrumb pd-0 mg-0 tx-12">
                <span class="breadcrumb-item">Face Comparison</span>
                <span class="breadcrumb-item">Inquiry Result</span>
                <span class="breadcrumb-item active">{ breadcrumb }</span>
            </nav>
        </div>
        <div class="br-pagebody pd-r-5 pd-l-5 mg-t-10">
            <div class="br-section-wrapper pd-x-20 pd-t-10">
                <div class="row">
                    <div class="col-12">
                        <a href="#" onclick="{backToPage}" class="btn btn-primary float-left tx-11">
                            Back To List
                        </a>
                        <a href="#" if="{info.pass_value}" onclick="{backToNewAdhoc}" class="btn btn-success float-left tx-11">
                            Start New Ad-Hoc Checking
                        </a>
                    </div>
                </div>
                <div class="row pd-t-20 pd-b-40">
                    <div class="col-sm-4 bd-r">
                        <table class="table table-bordered tx-11">
                            <tr>
                                <th width="100">Date and Time</th>
                                <td if="{!isLoading}">{ detail['Date and Time']}</td>
                                <td if="{isLoading}">Loading...</td>
                            </tr>
                            <tr>
                                <th>NIK</th>
                                <td if="{!isLoading}">{ detail['NIK']}</td>
                                <td if="{isLoading}">Loading...</td>
                            </tr>
                            <tr>
                                <th>Source</th>
                                <td if="{!isLoading}">{ detail['Source']}</td>
                                <td if="{isLoading}">Loading...</td>
                            </tr>
                            <tr>
                                <th>Action By</th>
                                <td if="{!isLoading}">{ detail['Action By']}</td>
                                <td if="{isLoading}">Loading...</td>
                            </tr>
                            <tr>
                                <th>Threshold</th>
                                <td if="{!isLoading}">{ detail['Threshold']}</td>
                                <td if="{isLoading}">Loading...</td>
                            </tr>
                            <tr>
                                <th>Similarity</th>
                                <td if="{!isLoading}">{ detail['Similarity']}</td>
                                <td if="{isLoading}">Loading...</td>
                            </tr>
                            <tr>
                                <th>Result</th>
                                <td if="{!isLoading}">{ detail['Result']}</td>
                                <td if="{isLoading}">Loading...</td>
                            </tr>
                        </table>
                    </div>
                    <div class="col-sm-8 bd-l">
                        <div class="row pd-b-10">
                            <div class="col-6 text-center">eKTP Photo</div>
                            <div class="col-6 text-center">Compared Selfie</div>
                        </div>
                        <div class="row">
                            <div class="col-6 text-center">
                                <img if="{detail.ektpImage.length}" src="{detail.ektpImage}" class="fc-image" id="image-ektp"/>
                            </div>
                            <div class="col-6 text-center">
                                <img if="{detail.selfieImage}" src="{detail.selfieImage}" class="fc-image" id="image-selfie"/>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row bd-t pd-t-20" if="{download.enabled}">
                    <div class="col-sm-6">
                        <label>Download</label><br>
                        <div class="form-inline">
                            <select class="form-control float-left tx-11" id="download-type">
                                <option each="d in downloadTypes" value="d.type">{d.title}</option>
                            </select>
                            <button disabled="{(download.inprogress || isLoading) ? 'true' : ''}" class="btn btn-primary tx-11 float-left mg-r-5 mg-l-5" onclick="{() => downloadXLS(detail.NIK)}">
                                <span if="{!download.inprogress}">Download</span>
                                <span if="{download.inprogress}" class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                <span if="{download.inprogress}">Loading...</span>
                            </button>
                        </div>
                    </div>
                    <div class="col-sm-6">
                    </div>
                </div>
            </div>
        </div>
        <div class="alert alert-success wd-200 position-fixed alert-download" role="alert" if="{download.inprogress}">
            <b class="text-success tx-11">Download in Progress</b>
            <p class="mb-0 text-warning tx-10 bd-t">Please Don't Refresh This Page</p>
        </div>
    </div>

    <style>
        tr th, tr td {
            letter-spacing: 0px;
            font-size: 12px;
            padding: 8px;
        }
        .wrapper:hover, .wrapper-filter-and-search:hover {
            color: #C0C0C0;
        }
        .fc-image {
            /* min-height: 160px; */
            width: 350px;
            /* height: 100%; */
            /* max-height: 200px; */
            border-radius: 5px;
            background-color: #C0C0C0;
            overflow: hidden;
        }
        .alert-download {
            position: absolute;
            bottom: 0px;
            right: 5px;
            z-index: 9999;
            margin-bottom: 5px;
        }
    </style>
    
    <script>
        import {
            cancelAllRequest,
            p,
        } from 'services/SDK/main'
        import {
            FaceComparisonInquiryDetail,
            FaceComparisonInquiryDetailDownload,
        } from 'appModule/ekyc/ekyc.sdk'
        import { createAgentActivity } from 'appModule/agents/agent-activity.sdk'
        import zoom from 'jquery-zoom'
        import { getStorage, changeStorage } from 'helpers/storage'
        import { getCookie } from 'helpers/cookie'
        import downloadFile from 'js-file-download'
        import { goTo } from 'helpers/ma'
        import { showAlertError } from 'helpers/utilities'
        export default {
            info: {},
            isLoading: true,
            download: {},
            detail: {},
            backToPage(e) {
                e.preventDefault()
                changeStorage({'TMP': ''}, 'FC_DETAIL')
                goTo('face-comparison/inquiry')
            },
            backToNewAdhoc(e) {
                e.preventDefault()
                changeStorage({'TMP': ''}, 'FC_DETAIL')
                goTo('face-comparison/ad-hoc-checking')
            },
            onBeforeMount() {
                this.detail = {
                    'Date and Time': '-',
                    'NIK': '-',
                    'Source': '-',
                    'Action By': '-',
                    'Threshold': '-',
                    'Similarity': '-',
                    'Result': '-',
                    'selfieImage': 'data:image;base64,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',
                    'ektpImage': 'data:image;base64,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'
                }
                this.download = {
                    enabled: true,
                    inprogress: false
                }
                this.info = {
                    id: null,
                    tmpId: null,
                    pass_value: false
                }
                this.isLoading = false
                const isByPass = p('pass')
                if (isByPass) {
                    this.breadcrumb = 'Ad-Hoc Result'
                    this.downloadTypes = [{type: 'adhoc', title: 'Face Comparison Dukcapil - Ad Hoc'}]
                } else {
                    this.breadcrumb = 'Detail'
                    this.downloadTypes = [{type: 'detail', title: 'Face Comparison Result - Detail'}]
                }
            },
            onBeforeUnmount() {
                cancelAllRequest()
            },
            onMounted() {
                console.log('mounting face-comparison inquiry detail')
                const isByPass = p('pass')
                this.download.enabled = true
                if (isByPass) {
                    this.isLoading = false
                    const tmpStorage = getStorage('TMP', 'FC_DETAIL')
                    const data = JSON.parse(tmpStorage)
                    this.detail = {
                        'Date and Time': moment().format('YYYY/MM/DD HH:mm:ss'),
                        'NIK': data.nik,
                        'Source': data.channelName,
                        'Action By': data.actionBy,
                        'Threshold': data.threshold,
                        'Similarity': data.similarity,
                        'Result': data.result,
                        'selfieImage': 'data:image;base64,' + data.selfieImage,
                        'ektpImage': 'data:image;base64,' + data.ektpImage,
                    }
                    if (!data.ektpImage) this.detail.ektpImage = 'images/no-image.jpg'
                    if (!data.selfieImage) this.detail.selfieImage = 'images/no-image.jpg'
                    this.info.tmpId = data._id
                    this.info.pass_value = true
                    this.update()
                    this.startZoom()
                    this.logAgentActivity('Open Detail Screen Result', 'NIK=' + data.nik)
                } else {
                    this.info.pass_value = false
                    this.info.id = getStorage('CURRENT_ID', 'FC_INQUIRY')
                    this.getData()
                }
            },
            logAgentActivity(action, detail) {
                createAgentActivity({
                    module: 'Face Comparison Dukcapil - Detail',
                    action,
                    detail
                })
            },
            async getData() {
                try {
                    this.isLoading = true
                    this.update()
                    const {data} = await FaceComparisonInquiryDetail({ data_id: this.info.id })
                    this.detail = data
                    // if (!this.detail.ektpImage) this.detail.ektpImage = 'images/no-image.jpg'
                    // if (!this.detail.selfieImage) this.detail.selfieImage = 'images/no-image.jpg'
                    this.logAgentActivity('Open Detail Screen', 'NIK=' + data.NIK)
                } catch (err) {
                    showAlertError(err)
                }
                this.isLoading = false
                this.update()
                this.startZoom()
            },
            startZoom() {
                setTimeout(() => {
                    this.zoom('#image-ektp')
                    this.zoom('#image-selfie')
                }, 1 * 1000)
            },
            zoom(id) {
                $(id)
                    .wrap('<span style="display:inline-block"></span>')
                    .css('display', 'block')
                    .parent()
                    .zoom({magnify: 2})
            },
            downloadXLS(nik) {
                this.download.inprogress = true
                this.update()
                const payload = {
                    inquiry_ids: this.info.id,
                    mongo_id: this.info.tmpId
                }
                FaceComparisonInquiryDetailDownload({...payload, filename: true})
                    .catch((err) => {
                        showAlertError(err)
                        this.download.inprogress = false
                        this.update()
                        return null
                    })
                    .then((res) => {
                        const filename = res.filename
                        FaceComparisonInquiryDetailDownload(payload)
                            .catch((err) => {
                                showAlertError(err)
                                this.download.inprogress = false
                                this.update()
                                return null
                            })
                            .then((res) => {
                                if (window.run_debug) debugger
                                if (res) {
                                    if (window.run_debug) debugger
                                    downloadFile(res, filename)
                                }
                                this.download.inprogress = false
                                this.update()

                                // let currentQueries = []
                                // for (const q in payload) {
                                //     if (payload[q]) currentQueries.push(q + '=' + payload[q])
                                // }
                                this.logAgentActivity('Download File: ' + filename, 'Detail Screen NIK= ' + nik)
                            })
                    })
            }
        }
    </script>
</face-comparison-inquiry-detail>