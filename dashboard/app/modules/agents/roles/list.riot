<role-list>
    <div class="br-mainpanel">
        <div class="br-pageheader">
            <nav class="breadcrumb pd-0 mg-0 tx-12">
                <a class="breadcrumb-item">Settings</a>
                <span class="breadcrumb-item active">Roles</span>
            </nav>
        </div>

        <div class="br-pagebody pd-x-20 pd-sm-x-30 pd-b-20">
            <div class="br-section-wrapper pd-30">
                <div class="row">
                    <h5 class="mg-b-20">Available Roles</h5>
                    <div class="col-12 bd pd-0 bd-b-0" if="{!this.isLoading}">
                        <table class="table table-striped table-hover mg-b-0 b-b-1">
                            <thead>
                                <tr>
                                    <td class="tx-11 font-weight-bold tx-left width-30">#</td>
                                    <td class="tx-11 font-weight-bold tx-left">Name</td>
                                    <td class="tx-11 font-weight-bold tx-left">Description</td>
                                    <td class="tx-11 font-weight-bold tx-right width-100">Total User</td>
                                    <td class="tx-11 font-weight-bold tx-left width-100">Status</td>
                                    <td class="tx-11 font-weight-bold tx-left">Actions</td>
                                </tr>
                            </thead>
                            <tbody>
                                <tr each={(v,i) in items}>
                                    <td class="width-30">{i + 1}</td>
                                    <td class="width-200">{v.title}</td>
                                    <td>{v.description}</td>
                                    <td class="tx-right width-100">{v.agent_used.count}</td>
                                    <td>{v.status || ''}</td>
                                    <td class="">
                                        <a class="btn {btn['btn-class']} btn-icon c_p"
                                            each="{btn in v.buttons}" onclick="{()=>Actions(v, btn)}">
                                            <div class="custom-width-height tx-11" value="{btn.title}">{btn.title}</div>
                                        </a>
                                    </td>
                                </tr>
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td colspan="5"></td>
                                    <td class="width-150">
                                        <a href="{setLink(`role/create`,{})}" 
                                            id="AddUser"
                                            if="{ isHasCreateAccess }"
                                            class="btn btn-primary btn-icon mg-r-10 pull-right">
                                            <div class="mg-r-15 mg-l-15 custom-width-height tx-11" 
                                            style="width:max-content;">Create Role</div>
                                        </a>                                     
                                    </td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                    <div class="col-12 bd pd-0 bd-b-0" if="{this.isLoading}">
                        <div class="ripple-loader2"></div>
                    </div>
                </div>
            </div> 
        </div>
    </div>

    <style>
        .custom-width-height{
            width: 40px;
            height: 23px;
        }
        .curtom-height{
            height: 23px;
        }
        .c_pointer{
            cursor: pointer;
        }
        .b-b-1{
            border-bottom: 1px solid #ced4da;
        }
        .tx-left{
            text-align: left;
        }
        .tx-right{
            text-align: right;
        }
        tr td{
            /* font-size: 0.875rem; */
            font-size: 12px;
        }
        .table th {
            padding: 1rem 1rem 1rem 0.7rem !important;
        }
        .width-30{
            width: 30px;
        }
        .width-200{
            width: 200px;
        }
        .width-50{
            width: 50px;
        }
        .width-150{
            width: 150px;
        }
        a.btn-outline-warning{
            color:#F49917;
        }
        a.btn-outline-danger{
            color:red;
        }
        a.btn-outline-warning:hover{
            color:#fff;
        }
        a.btn-outline-danger:hover{
            color:#fff;
        }
        .c_p{
            cursor:pointer;
        }
    </style>

    <script>
        import {
            cancelAllRequest,
        } from 'services/SDK/main'
        import {
            getListRole,
            RemoveRole
        } from 'appModule/agents/agents.sdk'
        import { goTo} from 'helpers/ma'
        import { result } from 'lodash'
        import { getStorage } from 'helpers/utilities'

        export default {
            onBeforeUnmount() {
                cancelAllRequest()
            },
            onMounted() {
                const access = getStorage('access', true)
                this.isHasCreateAccess = access.indexOf('roles.create') > -1
                this.isLoading = true 
                this.update()
                if (window.run_debug) debugger
                this.render()
            },
            render(){
                if (window.run_debug) debugger
                getListRole()
                .then((response)=>{
                    this.items = (response.data.items)
                    this.isLoading = false
                    this.update()
                    if (window.run_debug) debugger
                })
            },
            Actions(opt, currentBtn){
                if (window.run_debug) debugger
                if(currentBtn.name === 'del'){
                    this.Delete(opt)
                } else {
                    const link = `${currentBtn.link}?username=${opt.name}`
                    goTo(link)
                }
            },
            Delete(val){
                Swal.fire({
                    title: 'Are you sure?',
                    text: ' User name : ' + val.title,
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Delete'
                    }).then((result) => {
                    if (result.value) {
                        RemoveRole({rolename:val.name})
                            .then((response)=>{
                                Swal.fire(
                                response.message,
                                '',
                                'success'
                                )
                                this.render()
                            })
                            .catch((err)=>{
                                console.log(err)
                                Swal.fire({
                                    type: 'error',
                                    title: 'Oops...',
                                    text: err.message || err.error || 'Server Not Responding',
                                })
                            })
                    }
                })
            },
        }
    </script>

</role-list>
    